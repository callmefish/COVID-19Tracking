{"version":3,"sources":["store/action/http.js","components/header/index.js","store/action/getUSCurrent.js","components/map/index.js","store/action/getStatesCurrent.js","components/chart/usChart.js","store/action/getUSHistory.js","components/chart/stateChart.js","store/action/getStateHistory.js","components/chart/index.js","App.js","reportWebVitals.js","store/reducers/index.js","store/reducers/currentUS.js","store/reducers/currentStates.js","store/index.js","index.js"],"names":["HTTP","axios","create","baseURL","connect","res","props","dispatch","setMapType","secondHeader","useRef","useState","updateTime","setUpdateTime","title","number","recent","cardData","setCardData","useEffect","get","then","data","length","type","lastModified","slice","positive","positiveIncrease","hospitalizedCurrently","hospitalizedIncrease","death","deathIncrease","className","ref","map","item","index","onClick","Index","cards","current","querySelectorAll","forEach","classList","remove","add","itemActive","toLocaleString","setOneState","mapType","echarts","TitleComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","GeoComponent","MapChart","CanvasRenderer","chart","name","value","mapData","setMapData","myChart","visualMap","left","min","max","inRange","color","text","calculable","option","tooltip","trigger","triggerOn","showDelay","transitionDuration","formatter","params","paramsData","hospitalized","toolbox","show","top","feature","dataView","readOnly","restore","saveAsImage","series","roam","scaleLimit","emphasis","label","textFixed","Alaska","showMap","usaMap","width","Hawaii","setOption","changeMinMax","minValue","maxValue","itemValue","ans","i","usStates","hasOwnProperty","state","push","minV","maxV","changeValue","USChart","historyDate","setHistoryDate","setPositive","setPositiveIncrease","setHospitalized","setHospitalizedIncrease","setDeath","setDeathIncrease","loading","setLoading","lineChart","position","pt","legend","padding","xAxis","boundaryGap","yAxis","dataZoom","start","end","showChart","init","showLoading","hideLoading","oldDate","date","toString","reverse","onDoubleClick","StateChart","oneState","console","log","getStateHistory","usStatesReverse","pos","posI","hos","hosI","dea","deaI","changeOption","GridComponent","DataZoomComponent","LineChart","LegendComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","currentUS","action","cases","deaths","currentStates","store","createStore","combineReducers","reducers","applyMiddleware","Thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12718ed1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst HTTP = axios.create({\r\n    baseURL:\"https://api.covidtracking.com/v1\",\r\n    // withCredentials: true,\r\n    // transformRequest:(data)=>{\r\n    //     return data\r\n    // }\r\n});\r\nexport default HTTP;","import { useEffect, useRef, useState } from \"react\"\r\nimport { connect} from \"react-redux\";\r\nimport getUSCurrent from \"../../store/action/getUSCurrent\";\r\nimport \"../../css/header.css\"\r\n\r\nfunction Header(props){\r\n    let {dispatch, setMapType} = props;\r\n    const secondHeader = useRef(null);\r\n    const [updateTime, setUpdateTime] = useState(\"2021-01-25\");\r\n    const [cardData, setCardData] = useState([\r\n        {\r\n            title: \"TOTAL CASES\",\r\n            number: 24935139,\r\n            recent: 133067\r\n        },\r\n        {\r\n            title: \"HOSPITALIZED\",\r\n            number: 109936,\r\n            recent: 2515\r\n        },\r\n        {\r\n            title: \"TOTAL DEATHS\",\r\n            number: 411823,\r\n            recent: 1593\r\n        }\r\n    ]);\r\n    useEffect(()=>{\r\n        dispatch(getUSCurrent()).then(res=>{\r\n            setUpdateTime(res.updateTime);\r\n            setCardData(res.cardData);\r\n        });\r\n    }, []);\r\n    function itemActive(Index){\r\n        let cards = secondHeader.current.querySelectorAll(\".card\");\r\n        cards.forEach(item => {\r\n            item.classList.remove(\"active\");\r\n        });\r\n        cards.forEach((item, index)=>{\r\n            if(index==Index){\r\n                item.classList.add(\"active\");\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"firstHeader\">\r\n                <h1>COVID-19 Tracking</h1>\r\n                <p>Track the spread of the Coronavirus (Covid-19) Outbreak in the U.S.</p>\r\n                <i>{\"Last Updated: \" + updateTime}</i>\r\n            </div>\r\n            <br />\r\n            <hr />\r\n            <div className=\"secondHeader\" ref={secondHeader}>\r\n                {\r\n                    cardData.map((item, index)=>(\r\n                        <div \r\n                            className=\"card\" \r\n                            key={index}\r\n                            onClick={()=>{\r\n                                itemActive(index);\r\n                                setMapType(item.title);\r\n                            }}\r\n                        >\r\n                            <h3>{item.title}</h3>\r\n                            <div className=\"card-number\">{item.number.toLocaleString()}</div>\r\n                            <div className=\"card-recent\">+ {item.recent.toLocaleString()} New Cases</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <br />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\nexport default connect(res=>{\r\n    return res\r\n})(Header);","import HTTP from \"./http\";\r\n\r\nexport default function getUSCurrent(){\r\n    return function(dispatch){\r\n        return HTTP.get(\"/us/current.json\").then(res=>{\r\n            if(res.data.length > 0){\r\n                dispatch({\r\n                    type: \"CURRENTUS\",\r\n                    data: res.data[0]\r\n                });\r\n                return {\r\n                    updateTime: res.data[0].lastModified.slice(0,10),\r\n                    cardData: [\r\n                        {\r\n                            title: \"TOTAL CASES\",\r\n                            number: res.data[0].positive,\r\n                            recent: res.data[0].positiveIncrease\r\n                        },\r\n                        {\r\n                            title: \"HOSPITALIZED\",\r\n                            number: res.data[0].hospitalizedCurrently,\r\n                            recent: res.data[0].hospitalizedIncrease\r\n                        },\r\n                        {\r\n                            title: \"TOTAL DEATHS\",\r\n                            number: res.data[0].death,\r\n                            recent: res.data[0].deathIncrease\r\n                        }\r\n                    ]\r\n                };\r\n            }\r\n        });\r\n    }\r\n}","import * as echarts from \"echarts/core\";\r\nimport {\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n} from \"echarts/components\";\r\nimport { MapChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport usaMap from \"./usaMap.json\";\r\nimport usStates from \"./usStates.json\";\r\nimport \"../../css/map.css\";\r\nimport { connect } from \"react-redux\";\r\nimport getStatesCurrent from \"../../store/action/getStatesCurrent\";\r\n\r\nfunction Map(props) {\r\n  let {dispatch, setOneState, mapType} = props;\r\n  echarts.use([TitleComponent,ToolboxComponent,TooltipComponent,VisualMapComponent,GeoComponent,MapChart,CanvasRenderer,]);\r\n  let [mapData, setMapData] = useState([\r\n    {name: 'Alabama', value: 4822023},\r\n    {name: 'Alaska', value: 731449},\r\n    {name: 'Arizona', value: 6553255},\r\n    {name: 'Arkansas', value: 2949131},\r\n    {name: 'California', value: 38041430},\r\n    {name: 'Colorado', value: 5187582},\r\n    {name: 'Connecticut', value: 3590347},\r\n    {name: 'Delaware', value: 917092},\r\n    {name: 'District of Columbia', value: 632323},\r\n    {name: 'Florida', value: 19317568},\r\n    {name: 'Georgia', value: 9919945},\r\n    {name: 'Hawaii', value: 1392313},\r\n    {name: 'Idaho', value: 1595728},\r\n    {name: 'Illinois', value: 12875255},\r\n    {name: 'Indiana', value: 6537334},\r\n    {name: 'Iowa', value: 3074186},\r\n    {name: 'Kansas', value: 2885905},\r\n    {name: 'Kentucky', value: 4380415},\r\n    {name: 'Louisiana', value: 4601893},\r\n    {name: 'Maine', value: 1329192},\r\n    {name: 'Maryland', value: 5884563},\r\n    {name: 'Massachusetts', value: 6646144},\r\n    {name: 'Michigan', value: 9883360},\r\n    {name: 'Minnesota', value: 5379139},\r\n    {name: 'Mississippi', value: 2984926},\r\n    {name: 'Missouri', value: 6021988},\r\n    {name: 'Montana', value: 1005141},\r\n    {name: 'Nebraska', value: 1855525},\r\n    {name: 'Nevada', value: 2758931},\r\n    {name: 'New Hampshire', value: 1320718},\r\n    {name: 'New Jersey', value: 8864590},\r\n    {name: 'New Mexico', value: 2085538},\r\n    {name: 'New York', value: 19570261},\r\n    {name: 'North Carolina', value: 9752073},\r\n    {name: 'North Dakota', value: 699628},\r\n    {name: 'Ohio', value: 11544225},\r\n    {name: 'Oklahoma', value: 3814820},\r\n    {name: 'Oregon', value: 3899353},\r\n    {name: 'Pennsylvania', value: 12763536},\r\n    {name: 'Rhode Island', value: 1050292},\r\n    {name: 'South Carolina', value: 4723723},\r\n    {name: 'South Dakota', value: 833354},\r\n    {name: 'Tennessee', value: 6456243},\r\n    {name: 'Texas', value: 26059203},\r\n    {name: 'Utah', value: 2855287},\r\n    {name: 'Vermont', value: 626011},\r\n    {name: 'Virginia', value: 8185867},\r\n    {name: 'Washington', value: 6897012},\r\n    {name: 'West Virginia', value: 1855413},\r\n    {name: 'Wisconsin', value: 5726398},\r\n    {name: 'Wyoming', value: 576412},\r\n    {name: 'Puerto Rico', value: 3667084}\r\n  ]);\r\n  var myChart = useRef(null);\r\n  var visualMap = {\r\n      left: \"right\",\r\n      min: 500000,\r\n      max: 38000000,\r\n      inRange: {\r\n        color: [\"#313695\",\"#4575b4\",\"#74add1\",\"#abd9e9\",\"#e0f3f8\",\"#ffffbf\",\"#fee090\",\"#fdae61\",\"#f46d43\",\"#d73027\",\"#a50026\",],\r\n      },\r\n      text: [\"High\", \"Low\"], // Text, default is numeric text\r\n      calculable: true,\r\n  };\r\n  var option = {\r\n    title: {\r\n      text: 'USA ' + `${mapType?mapType:\"Population Estimates (2012)\"}`,\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      triggerOn: \"click\",\r\n      showDelay: 0,\r\n      transitionDuration: 0.2,\r\n      formatter: function (params) {\r\n        var paramsData = params.data;\r\n        setOneState(paramsData.name);\r\n        return (`<div>\r\n          <b>${paramsData.name}</b><br />\r\n          <b>Positive</b> : ${paramsData.positive}<br />\r\n          <b>Positive Increase</b> : ${paramsData.positiveIncrease}<br />\r\n          <b>Hospitalized</b> : ${paramsData.hospitalized}<br />\r\n          <b>Hospitalized Increase</b> : ${paramsData.hospitalizedIncrease}<br />\r\n          <b>Death</b> : ${paramsData.death}<br />\r\n          <b>Death Increase</b> : ${paramsData.deathIncrease}\r\n        <div>`);\r\n      },\r\n    },\r\n    visualMap: visualMap,\r\n    toolbox: {\r\n      show: true,\r\n      //orient: 'vertical',\r\n      left: \"left\",\r\n      top: \"top\",\r\n      feature: {\r\n        dataView: { readOnly: false },\r\n        restore: {},\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"USA map\",\r\n        type: \"map\",\r\n        roam: true,\r\n        scaleLimit: {\r\n          min: 1,\r\n          max: 3,\r\n        },\r\n        map: \"USA\",\r\n        emphasis: {\r\n          label: {\r\n            show: true,\r\n          },\r\n        },\r\n        // Text position correction\r\n        textFixed: {\r\n          Alaska: [20, -20],\r\n        },\r\n        data: mapData,\r\n      },\r\n    ],\r\n  };\r\n  var chart;\r\n  function showMap() {\r\n    chart = echarts.init(myChart.current);\r\n    echarts.registerMap(\"USA\", usaMap, {\r\n      // change some place of state on the map\r\n      Alaska: {\r\n        left: -131,\r\n        top: 25,\r\n        width: 15,\r\n      },\r\n      Hawaii: {\r\n        left: -113,\r\n        top: 24,\r\n        width: 5,\r\n      },\r\n      \"Puerto Rico\": {\r\n        left: -76,\r\n        top: 26,\r\n        width: 2,\r\n      },\r\n    });\r\n    chart.setOption(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatesCurrent()).then((res) => {\r\n      let ans = [];\r\n      for (let i = 0; i < res.length; i++) {\r\n        if (usStates.hasOwnProperty(res[i].state)) {\r\n          ans.push({\r\n            name: usStates[res[i].state],\r\n            positive: res[i].positive?res[i].positive:0,\r\n            positiveIncrease: res[i].positiveIncrease?res[i].positiveIncrease:0,\r\n            death: res[i].death?res[i].death:0,\r\n            deathIncrease: res[i].deathIncrease?res[i].deathIncrease:0,\r\n            hospitalized: res[i].hospitalized?res[i].hospitalized:0,\r\n            hospitalizedIncrease: res[i].hospitalizedIncrease?res[i].hospitalizedIncrease:0,\r\n          });\r\n        }\r\n      }\r\n      setMapData(ans);\r\n      showMap();\r\n    });\r\n  }, []);\r\n\r\n  function changeMinMax(minValue, maxValue, itemValue){\r\n    if(maxValue < itemValue){\r\n      maxValue = itemValue; \r\n    }\r\n    if(minValue > itemValue){\r\n      minValue = itemValue;\r\n    }\r\n    return [minValue, maxValue];\r\n  }\r\n  function changeValue(){\r\n    let minV = 38000000;\r\n    let maxV = 0;\r\n    if(mapType===\"TOTAL CASES\"){\r\n      mapData.map(item=>{\r\n        item.value=item.positive;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }else if(mapType===\"HOSPITALIZED\"){\r\n      mapData.map(item=>{\r\n        item.value=item.hospitalized;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }else if(mapType===\"TOTAL DEATHS\"){\r\n      mapData.map(item=>{\r\n        item.value=item.death;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }\r\n    visualMap.min = minV;\r\n    visualMap.max = maxV;\r\n  }\r\n  useEffect(()=>{\r\n    if (mapType!==\"\"){\r\n      changeValue();\r\n    }\r\n    showMap();\r\n  }, [mapType]);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"mapChart\" ref={myChart}></div>\r\n      <br />\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\nexport default connect((res) => res)(Map);\r\n","import HTTP from \"./http\";\r\n\r\nexport default function getStatesCurrent(){\r\n    return function(dispatch){\r\n        return HTTP.get(\"/states/current.json\").then(res=>{\r\n            if(res.data.length > 0){\r\n                return res.data;\r\n            }\r\n        });\r\n    }\r\n}","import { useEffect, useRef , useState} from \"react\";\r\nimport \"../../css/chart.css\";\r\nimport getUSHistory from \"../../store/action/getUSHistory\";\r\n\r\nfunction USChart(props){\r\n    let {dispatch, mapType, echarts, className} = props;\r\n    const [historyDate, setHistoryDate] = useState([]);\r\n    const [positive, setPositive] = useState([]);\r\n    const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n    const [hospitalized, setHospitalized] = useState([]);\r\n    const [hospitalizedIncrease, setHospitalizedIncrease] = useState([]);\r\n    const [death, setDeath] = useState([]);\r\n    const [deathIncrease, setDeathIncrease] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    var lineChart = useRef(null);\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            position: function (pt) {\r\n                return [pt[0], '10%'];\r\n            }\r\n        },\r\n        title: {\r\n            left: 'center',\r\n            top: '0%',\r\n            text: 'COVID-19 US historic values',\r\n        },\r\n        legend:{\r\n            data: ['Positive', 'Positive Increase', 'Hospitalized', 'Hospitalized Increase', 'Death', 'Death Increase'],\r\n            type: \"scroll\",\r\n            padding: [30, 0]\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: historyDate\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, '100%']\r\n        },\r\n        dataZoom: [{\r\n            type: 'inside',\r\n            start: 50,\r\n            end: 100\r\n        }, {\r\n            start: 0,\r\n            end: 10\r\n        }],\r\n        series: [\r\n            {\r\n                name: 'Positive',\r\n                type: 'line',\r\n                data: positive\r\n            },\r\n            {\r\n                name: 'Positive Increase',\r\n                type: 'line',\r\n                data: positiveIncrease\r\n            },\r\n            {\r\n                name: 'Hospitalized',\r\n                type: 'line',\r\n                data: hospitalized\r\n            },\r\n            {\r\n                name: 'Hospitalized Increase',\r\n                type: 'line',\r\n                data: hospitalizedIncrease\r\n            },\r\n            {\r\n                name: 'Death',\r\n                type: 'line',\r\n                data: death\r\n            },\r\n            {\r\n                name: 'Death Increase',\r\n                type: 'line',\r\n                data: deathIncrease\r\n            }\r\n        ]\r\n    };\r\n    var myChart;\r\n    function showChart(){\r\n        myChart = echarts.init(lineChart.current);\r\n        myChart.showLoading();\r\n        if (!loading){\r\n            myChart.hideLoading();\r\n            myChart.setOption(option);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(getUSHistory()).then(res=>{\r\n            setHistoryDate(res.map(item=>item.date));\r\n            setPositive(res.map(item=>item.positive));\r\n            setPositiveIncrease(res.map(item=>item.positiveIncrease));\r\n            setHospitalized(res.map(item=>item.hospitalized));\r\n            setHospitalizedIncrease(res.map(item=>item.hospitalizedIncrease));\r\n            setDeath(res.map(item=>item.death));\r\n            setDeathIncrease(res.map(item=>item.deathIncrease));\r\n            showChart();\r\n        });\r\n    }, []);\r\n    useEffect(()=>{\r\n        setLoading(false);\r\n        showChart();\r\n    }, [mapType!==\"\"]);\r\n    return (\r\n        <div\r\n            className={className}\r\n            ref={lineChart}\r\n            onDoubleClick={()=>{\r\n                setLoading(false);\r\n                showChart();\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default USChart;","import HTTP from \"./http\";\r\n\r\nexport default function getUSHistory(){\r\n    return function(dispatch){\r\n        return HTTP.get(\"/us/daily.json\").then(res=>{\r\n            if(res.data.length > 0){\r\n                return res.data.map(item=>{\r\n                    let oldDate = item.date.toString();\r\n                    let newDate = oldDate.slice(0, 4) + \"-\" + oldDate.slice(4,6) + \"-\" + oldDate.slice(6, 8);\r\n                    return {\r\n                        date: newDate,\r\n                        positive: item.positive?item.positive:0,\r\n                        positiveIncrease: item.positiveIncrease?item.positiveIncrease:0,\r\n                        hospitalized: item.hospitalizedCurrently?item.hospitalizedCurrently:0,\r\n                        hospitalizedIncrease: item.hospitalizedIncrease?item.hospitalizedIncrease:0,\r\n                        death: item.death?item.death:0,\r\n                        deathIncrease: item.deathIncrease?item.deathIncrease:0\r\n                    }\r\n                }).reverse();\r\n            }\r\n        });\r\n    }\r\n}","import { useEffect, useRef , useState} from \"react\";\r\nimport \"../../css/chart.css\";\r\nimport getStateHistory from \"../../store/action/getStateHistory\";\r\nimport usStatesReverse from \"./usStatesReverse.json\";\r\n\r\nfunction StateChart(props){\r\n    let {dispatch, oneState, echarts, className} = props;\r\n    const [historyDate, setHistoryDate] = useState([]);\r\n    const [positive, setPositive] = useState([]);\r\n    const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n    const [hospitalized, setHospitalized] = useState([]);\r\n    const [hospitalizedIncrease, setHospitalizedIncrease] = useState([]);\r\n    const [death, setDeath] = useState([]);\r\n    const [deathIncrease, setDeathIncrease] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    var lineChart = useRef(null);\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            position: function (pt) {\r\n                return [pt[0], '10%'];\r\n            }\r\n        },\r\n        title: {\r\n            left: 'center',\r\n            top: '0%',\r\n            text: 'COVID-19 ' + oneState + ' historic values',\r\n        },\r\n        legend:{\r\n            data: ['Positive', 'Positive Increase', 'Hospitalized', 'Hospitalized Increase', 'Death', 'Death Increase'],\r\n            type: \"scroll\",\r\n            padding: [30, 0]\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: historyDate\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, '100%']\r\n        },\r\n        dataZoom: [{\r\n            type: 'inside',\r\n            start: 50,\r\n            end: 100\r\n        }, {\r\n            start: 0,\r\n            end: 10\r\n        }],\r\n        series: [\r\n            {\r\n                name: 'Positive',\r\n                type: 'line',\r\n                data: positive\r\n            },\r\n            {\r\n                name: 'Positive Increase',\r\n                type: 'line',\r\n                data: positiveIncrease\r\n            },\r\n            {\r\n                name: 'Hospitalized',\r\n                type: 'line',\r\n                data: hospitalized\r\n            },\r\n            {\r\n                name: 'Hospitalized Increase',\r\n                type: 'line',\r\n                data: hospitalizedIncrease\r\n            },\r\n            {\r\n                name: 'Death',\r\n                type: 'line',\r\n                data: death\r\n            },\r\n            {\r\n                name: 'Death Increase',\r\n                type: 'line',\r\n                data: deathIncrease\r\n            }\r\n        ]\r\n    };\r\n    var myChart;\r\n    function showChart(option){\r\n        myChart = echarts.init(lineChart.current);\r\n        myChart.showLoading();\r\n        if (!loading){\r\n            myChart.hideLoading();\r\n            myChart.setOption(option);\r\n        }\r\n    }\r\n    function changeOption(option, date, pos, posI, hos, hosI, dea, deaI){\r\n        option.xAxis.data = date;\r\n        option.series[0].data = pos;\r\n        option.series[1].data = posI;\r\n        option.series[2].data = hos;\r\n        option.series[3].data = hosI;\r\n        option.series[4].data = dea;\r\n        option.series[5].data = deaI;\r\n        return option;\r\n    }\r\n    useEffect(()=>{\r\n        showChart(option);\r\n    }, []);\r\n    useEffect(()=>{\r\n        setLoading(false);\r\n        console.log(oneState);\r\n        if(oneState!==\"\"){\r\n            dispatch(getStateHistory(usStatesReverse[oneState])).then(res=>{\r\n                let [date, pos, posI, hos, hosI, dea, deaI] = [\r\n                    res.map(item=>item.date),\r\n                    res.map(item=>item.positive),\r\n                    res.map(item=>item.positiveIncrease),\r\n                    res.map(item=>item.hospitalized),\r\n                    res.map(item=>item.hospitalizedIncrease),\r\n                    res.map(item=>item.death),\r\n                    res.map(item=>item.deathIncrease)\r\n                ];\r\n                setHistoryDate(date);\r\n                setPositive(pos);\r\n                setPositiveIncrease(posI);\r\n                setHospitalized(hos);\r\n                setHospitalizedIncrease(hosI);\r\n                setDeath(dea);\r\n                setDeathIncrease(deaI);\r\n                option = changeOption(option, date, pos, posI, hos, hosI, dea, deaI);\r\n                showChart(option);\r\n            });\r\n        }\r\n    }, [oneState])\r\n    return (\r\n        <div\r\n            className={className}\r\n            ref={lineChart}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StateChart;","import HTTP from \"./http\";\r\n\r\nexport default function getStateHistory(oneState){\r\n    return function(dispatch){\r\n        return HTTP.get(\"/states/\" + oneState + \"/daily.json\").then(res=>{\r\n            if(res.data.length > 0){\r\n                return res.data.map(item=>{\r\n                    let oldDate = item.date.toString();\r\n                    let newDate = oldDate.slice(0, 4) + \"-\" + oldDate.slice(4,6) + \"-\" + oldDate.slice(6, 8);\r\n                    return {\r\n                        date: newDate,\r\n                        positive: item.positive?item.positive:0,\r\n                        positiveIncrease: item.positiveIncrease?item.positiveIncrease:0,\r\n                        hospitalized: item.hospitalizedCurrently?item.hospitalizedCurrently:0,\r\n                        hospitalizedIncrease: item.hospitalizedIncrease?item.hospitalizedIncrease:0,\r\n                        death: item.death?item.death:0,\r\n                        deathIncrease: item.deathIncrease?item.deathIncrease:0\r\n                    }\r\n                }).reverse();\r\n            }\r\n        });\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport \"../../css/chart.css\";\r\n\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n    TitleComponent,\r\n    TooltipComponent,\r\n    GridComponent,\r\n    DataZoomComponent,\r\n    LegendComponent\r\n} from 'echarts/components';\r\nimport {\r\n    LineChart\r\n} from 'echarts/charts';\r\nimport {\r\n    CanvasRenderer\r\n} from 'echarts/renderers';\r\nimport USChart from \"./usChart\";\r\nimport StateChart from \"./stateChart\";\r\n\r\n\r\nfunction Chart(props){\r\n    echarts.use([TitleComponent, TooltipComponent, GridComponent, DataZoomComponent, LineChart, CanvasRenderer, LegendComponent]);\r\n    \r\n    return (\r\n        <div className=\"charts\">\r\n            <USChart\r\n                className={\"usChart\"}\r\n                echarts={echarts} \r\n                {...props} \r\n            />\r\n            <StateChart\r\n                className={\"stateChart\"}\r\n                echarts={echarts} \r\n                {...props} \r\n            />\r\n            <br />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(res=>{\r\n    return res;\r\n})(Chart);","import Header from \"./components/header\";\nimport Map from \"./components/map\";\nimport Chart from \"./components/chart\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [oneState, setOneState] = useState(\"\");\n  const [mapType, setMapType] = useState(\"\");\n  return (\n    <div>\n      <Header\n        setMapType={setMapType}\n      />\n      <Map \n        oneState={oneState}\n        setOneState={setOneState}\n        mapType={mapType}\n        setMapType={setMapType}\n      />\n      <Chart \n        oneState={oneState}\n        mapType={mapType}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import currentUS from \"./currentUS\";\r\nimport currentStates from \"./currentStates\";\r\nexport default {\r\n    currentUS,\r\n    currentStates\r\n}","export default function currentUS(state=\"\",action){\r\n    switch (action.type) {\r\n        case \"CURRENT_US\":\r\n            return {\r\n                updateTime: action.data.lastModified.slice(0,10),\r\n                cardData: [\r\n                    {cases: {\r\n                        title: \"TOTAL CASES\",\r\n                        number: action.data.positive,\r\n                        recent: action.data.positiveIncrease\r\n                    }},\r\n                    {hospitalized: {\r\n                        title: \"HOSPITALIZED\",\r\n                        number: action.data.hospitalizedCurrently,\r\n                        recent: action.data.hospitalizedIncrease\r\n                    }},\r\n                    {deaths: {\r\n                        title: \"TOTAL DEATHS\",\r\n                        number: action.data.death,\r\n                        recent: action.data.deathIncrease\r\n                    }}\r\n                ]\r\n            };\r\n    }\r\n    return state;\r\n}","export default function currentStates(state=\"\",action){\r\n    switch (action.type) {\r\n        case \"CURRENT_STATES\":\r\n            return action.data;\r\n    }\r\n    return state;\r\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport Thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers/index\";\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(Thunk)\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}