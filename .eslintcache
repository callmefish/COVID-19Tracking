[{"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\index.js":"1","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\reportWebVitals.js":"2","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\App.js":"3","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\header\\index.js":"4","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\map\\index.js":"5","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\index.js":"6","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\index.js":"7","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\index.js":"8","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\http.js":"9","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getUSCurrent.js":"10","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\currentUS.js":"11","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getStatesCurrent.js":"12","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\currentStates.js":"13","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getUSHistory.js":"14","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getStateHistory.js":"15","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\usChart.js":"16","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\stateChart.js":"17"},{"size":551,"mtime":1611594696005,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":597,"mtime":1611695340403,"results":"21","hashOfConfig":"19"},{"size":2560,"mtime":1611676295175,"results":"22","hashOfConfig":"19"},{"size":7336,"mtime":1611701861887,"results":"23","hashOfConfig":"19"},{"size":1078,"mtime":1611701899016,"results":"24","hashOfConfig":"19"},{"size":260,"mtime":1611594751142,"results":"25","hashOfConfig":"19"},{"size":138,"mtime":1611636445315,"results":"26","hashOfConfig":"19"},{"size":233,"mtime":1611611317225,"results":"27","hashOfConfig":"19"},{"size":1240,"mtime":1611636016845,"results":"28","hashOfConfig":"19"},{"size":969,"mtime":1611636409258,"results":"29","hashOfConfig":"19"},{"size":276,"mtime":1611638597728,"results":"30","hashOfConfig":"19"},{"size":177,"mtime":1611636404935,"results":"31","hashOfConfig":"19"},{"size":1060,"mtime":1611702162107,"results":"32","hashOfConfig":"19"},{"size":1092,"mtime":1611702156943,"results":"33","hashOfConfig":"19"},{"size":3685,"mtime":1611701266472,"results":"34","hashOfConfig":"19"},{"size":4532,"mtime":1611703496590,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1sfy0s0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\index.js",[],["79","80"],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\reportWebVitals.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\App.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\header\\index.js",["81","82"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { connect} from \"react-redux\";\r\nimport getUSCurrent from \"../../store/action/getUSCurrent\";\r\nimport \"../../css/header.css\"\r\n\r\nfunction Header(props){\r\n    let {dispatch, setMapType} = props;\r\n    const secondHeader = useRef(null);\r\n    const [updateTime, setUpdateTime] = useState(\"2021-01-25\");\r\n    const [cardData, setCardData] = useState([\r\n        {\r\n            title: \"TOTAL CASES\",\r\n            number: 24935139,\r\n            recent: 133067\r\n        },\r\n        {\r\n            title: \"HOSPITALIZED\",\r\n            number: 109936,\r\n            recent: 2515\r\n        },\r\n        {\r\n            title: \"TOTAL DEATHS\",\r\n            number: 411823,\r\n            recent: 1593\r\n        }\r\n    ]);\r\n    useEffect(()=>{\r\n        dispatch(getUSCurrent()).then(res=>{\r\n            setUpdateTime(res.updateTime);\r\n            setCardData(res.cardData);\r\n        });\r\n    }, []);\r\n    function itemActive(Index){\r\n        let cards = secondHeader.current.querySelectorAll(\".card\");\r\n        cards.forEach(item => {\r\n            item.classList.remove(\"active\");\r\n        });\r\n        cards.forEach((item, index)=>{\r\n            if(index==Index){\r\n                item.classList.add(\"active\");\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"firstHeader\">\r\n                <h1>COVID-19 Tracking</h1>\r\n                <p>Track the spread of the Coronavirus (Covid-19) Outbreak in the U.S.</p>\r\n                <i>{\"Last Updated: \" + updateTime}</i>\r\n            </div>\r\n            <br />\r\n            <hr />\r\n            <div className=\"secondHeader\" ref={secondHeader}>\r\n                {\r\n                    cardData.map((item, index)=>(\r\n                        <div \r\n                            className=\"card\" \r\n                            key={index}\r\n                            onClick={()=>{\r\n                                itemActive(index);\r\n                                setMapType(item.title);\r\n                            }}\r\n                        >\r\n                            <h3>{item.title}</h3>\r\n                            <div className=\"card-number\">{item.number.toLocaleString()}</div>\r\n                            <div className=\"card-recent\">+ {item.recent.toLocaleString()} New Cases</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <br />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\nexport default connect(res=>{\r\n    return res\r\n})(Header);","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\map\\index.js",["83","84","85","86","87","88"],"import * as echarts from \"echarts/core\";\r\nimport {\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n} from \"echarts/components\";\r\nimport { MapChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport usaMap from \"./usaMap.json\";\r\nimport usStates from \"./usStates.json\";\r\nimport \"../../css/map.css\";\r\nimport { connect } from \"react-redux\";\r\nimport getStatesCurrent from \"../../store/action/getStatesCurrent\";\r\n\r\nfunction Map(props) {\r\n  let {dispatch, setOneState, mapType} = props;\r\n  echarts.use([TitleComponent,ToolboxComponent,TooltipComponent,VisualMapComponent,GeoComponent,MapChart,CanvasRenderer,]);\r\n  let [mapData, setMapData] = useState([\r\n    {name: 'Alabama', value: 4822023},\r\n    {name: 'Alaska', value: 731449},\r\n    {name: 'Arizona', value: 6553255},\r\n    {name: 'Arkansas', value: 2949131},\r\n    {name: 'California', value: 38041430},\r\n    {name: 'Colorado', value: 5187582},\r\n    {name: 'Connecticut', value: 3590347},\r\n    {name: 'Delaware', value: 917092},\r\n    {name: 'District of Columbia', value: 632323},\r\n    {name: 'Florida', value: 19317568},\r\n    {name: 'Georgia', value: 9919945},\r\n    {name: 'Hawaii', value: 1392313},\r\n    {name: 'Idaho', value: 1595728},\r\n    {name: 'Illinois', value: 12875255},\r\n    {name: 'Indiana', value: 6537334},\r\n    {name: 'Iowa', value: 3074186},\r\n    {name: 'Kansas', value: 2885905},\r\n    {name: 'Kentucky', value: 4380415},\r\n    {name: 'Louisiana', value: 4601893},\r\n    {name: 'Maine', value: 1329192},\r\n    {name: 'Maryland', value: 5884563},\r\n    {name: 'Massachusetts', value: 6646144},\r\n    {name: 'Michigan', value: 9883360},\r\n    {name: 'Minnesota', value: 5379139},\r\n    {name: 'Mississippi', value: 2984926},\r\n    {name: 'Missouri', value: 6021988},\r\n    {name: 'Montana', value: 1005141},\r\n    {name: 'Nebraska', value: 1855525},\r\n    {name: 'Nevada', value: 2758931},\r\n    {name: 'New Hampshire', value: 1320718},\r\n    {name: 'New Jersey', value: 8864590},\r\n    {name: 'New Mexico', value: 2085538},\r\n    {name: 'New York', value: 19570261},\r\n    {name: 'North Carolina', value: 9752073},\r\n    {name: 'North Dakota', value: 699628},\r\n    {name: 'Ohio', value: 11544225},\r\n    {name: 'Oklahoma', value: 3814820},\r\n    {name: 'Oregon', value: 3899353},\r\n    {name: 'Pennsylvania', value: 12763536},\r\n    {name: 'Rhode Island', value: 1050292},\r\n    {name: 'South Carolina', value: 4723723},\r\n    {name: 'South Dakota', value: 833354},\r\n    {name: 'Tennessee', value: 6456243},\r\n    {name: 'Texas', value: 26059203},\r\n    {name: 'Utah', value: 2855287},\r\n    {name: 'Vermont', value: 626011},\r\n    {name: 'Virginia', value: 8185867},\r\n    {name: 'Washington', value: 6897012},\r\n    {name: 'West Virginia', value: 1855413},\r\n    {name: 'Wisconsin', value: 5726398},\r\n    {name: 'Wyoming', value: 576412},\r\n    {name: 'Puerto Rico', value: 3667084}\r\n  ]);\r\n  var myChart = useRef(null);\r\n  var visualMap = {\r\n      left: \"right\",\r\n      min: 500000,\r\n      max: 38000000,\r\n      inRange: {\r\n        color: [\"#313695\",\"#4575b4\",\"#74add1\",\"#abd9e9\",\"#e0f3f8\",\"#ffffbf\",\"#fee090\",\"#fdae61\",\"#f46d43\",\"#d73027\",\"#a50026\",],\r\n      },\r\n      text: [\"High\", \"Low\"], // Text, default is numeric text\r\n      calculable: true,\r\n  };\r\n  var option = {\r\n    title: {\r\n      text: 'USA ' + `${mapType?mapType:\"Population Estimates (2012)\"}`,\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      triggerOn: \"click\",\r\n      showDelay: 0,\r\n      transitionDuration: 0.2,\r\n      formatter: function (params) {\r\n        var paramsData = params.data;\r\n        setOneState(paramsData.name);\r\n        return (`<div>\r\n          <b>${paramsData.name}</b><br />\r\n          <b>Positive</b> : ${paramsData.positive}<br />\r\n          <b>Positive Increase</b> : ${paramsData.positiveIncrease}<br />\r\n          <b>Hospitalized</b> : ${paramsData.hospitalized}<br />\r\n          <b>Hospitalized Increase</b> : ${paramsData.hospitalizedIncrease}<br />\r\n          <b>Death</b> : ${paramsData.death}<br />\r\n          <b>Death Increase</b> : ${paramsData.deathIncrease}\r\n        <div>`);\r\n      },\r\n    },\r\n    visualMap: visualMap,\r\n    toolbox: {\r\n      show: true,\r\n      //orient: 'vertical',\r\n      left: \"left\",\r\n      top: \"top\",\r\n      feature: {\r\n        dataView: { readOnly: false },\r\n        restore: {},\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"USA map\",\r\n        type: \"map\",\r\n        roam: true,\r\n        scaleLimit: {\r\n          min: 1,\r\n          max: 3,\r\n        },\r\n        map: \"USA\",\r\n        emphasis: {\r\n          label: {\r\n            show: true,\r\n          },\r\n        },\r\n        // Text position correction\r\n        textFixed: {\r\n          Alaska: [20, -20],\r\n        },\r\n        data: mapData,\r\n      },\r\n    ],\r\n  };\r\n  var chart;\r\n  function showMap() {\r\n    chart = echarts.init(myChart.current);\r\n    echarts.registerMap(\"USA\", usaMap, {\r\n      // change some place of state on the map\r\n      Alaska: {\r\n        left: -131,\r\n        top: 25,\r\n        width: 15,\r\n      },\r\n      Hawaii: {\r\n        left: -113,\r\n        top: 24,\r\n        width: 5,\r\n      },\r\n      \"Puerto Rico\": {\r\n        left: -76,\r\n        top: 26,\r\n        width: 2,\r\n      },\r\n    });\r\n    chart.setOption(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatesCurrent()).then((res) => {\r\n      let ans = [];\r\n      for (let i = 0; i < res.length; i++) {\r\n        if (usStates.hasOwnProperty(res[i].state)) {\r\n          ans.push({\r\n            name: usStates[res[i].state],\r\n            positive: res[i].positive?res[i].positive:0,\r\n            positiveIncrease: res[i].positiveIncrease?res[i].positiveIncrease:0,\r\n            death: res[i].death?res[i].death:0,\r\n            deathIncrease: res[i].deathIncrease?res[i].deathIncrease:0,\r\n            hospitalized: res[i].hospitalized?res[i].hospitalized:0,\r\n            hospitalizedIncrease: res[i].hospitalizedIncrease?res[i].hospitalizedIncrease:0,\r\n          });\r\n        }\r\n      }\r\n      setMapData(ans);\r\n      showMap();\r\n    });\r\n  }, []);\r\n\r\n  function changeMinMax(minValue, maxValue, itemValue){\r\n    if(maxValue < itemValue){\r\n      maxValue = itemValue; \r\n    }\r\n    if(minValue > itemValue){\r\n      minValue = itemValue;\r\n    }\r\n    return [minValue, maxValue];\r\n  }\r\n  function changeValue(){\r\n    let minV = 38000000;\r\n    let maxV = 0;\r\n    if(mapType===\"TOTAL CASES\"){\r\n      mapData.map(item=>{\r\n        item.value=item.positive;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }else if(mapType===\"HOSPITALIZED\"){\r\n      mapData.map(item=>{\r\n        item.value=item.hospitalized;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }else if(mapType===\"TOTAL DEATHS\"){\r\n      mapData.map(item=>{\r\n        item.value=item.death;\r\n        [minV, maxV] = changeMinMax(minV, maxV, item.value);\r\n      });\r\n    }\r\n    visualMap.min = minV;\r\n    visualMap.max = maxV;\r\n  }\r\n  useEffect(()=>{\r\n    if (mapType!==\"\"){\r\n      changeValue();\r\n    }\r\n    showMap();\r\n  }, [mapType]);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"mapChart\" ref={myChart}></div>\r\n      <br />\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\nexport default connect((res) => res)(Map);\r\n","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\index.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\index.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\index.js",["89"],"import currentUS from \"./currentUS\";\r\nimport currentStates from \"./currentStates\";\r\nexport default {\r\n    currentUS,\r\n    currentStates\r\n}","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\http.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getUSCurrent.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\currentUS.js",["90"],"export default function currentUS(state=\"\",action){\r\n    switch (action.type) {\r\n        case \"CURRENT_US\":\r\n            return {\r\n                updateTime: action.data.lastModified.slice(0,10),\r\n                cardData: [\r\n                    {cases: {\r\n                        title: \"TOTAL CASES\",\r\n                        number: action.data.positive,\r\n                        recent: action.data.positiveIncrease\r\n                    }},\r\n                    {hospitalized: {\r\n                        title: \"HOSPITALIZED\",\r\n                        number: action.data.hospitalizedCurrently,\r\n                        recent: action.data.hospitalizedIncrease\r\n                    }},\r\n                    {deaths: {\r\n                        title: \"TOTAL DEATHS\",\r\n                        number: action.data.death,\r\n                        recent: action.data.deathIncrease\r\n                    }}\r\n                ]\r\n            };\r\n    }\r\n    return state;\r\n}","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getStatesCurrent.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\reducers\\currentStates.js",["91"],"export default function currentStates(state=\"\",action){\r\n    switch (action.type) {\r\n        case \"CURRENT_STATES\":\r\n            return action.data;\r\n    }\r\n    return state;\r\n}","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getUSHistory.js",[],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\store\\action\\getStateHistory.js",[],["92","93"],"C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\usChart.js",["94","95","96"],"import { useEffect, useRef , useState} from \"react\";\r\nimport \"../../css/chart.css\";\r\nimport getUSHistory from \"../../store/action/getUSHistory\";\r\n\r\nfunction USChart(props){\r\n    let {dispatch, mapType, echarts, className} = props;\r\n    const [historyDate, setHistoryDate] = useState([]);\r\n    const [positive, setPositive] = useState([]);\r\n    const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n    const [hospitalized, setHospitalized] = useState([]);\r\n    const [hospitalizedIncrease, setHospitalizedIncrease] = useState([]);\r\n    const [death, setDeath] = useState([]);\r\n    const [deathIncrease, setDeathIncrease] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    var lineChart = useRef(null);\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            position: function (pt) {\r\n                return [pt[0], '10%'];\r\n            }\r\n        },\r\n        title: {\r\n            left: 'center',\r\n            top: '0%',\r\n            text: 'COVID-19 US historic values',\r\n        },\r\n        legend:{\r\n            data: ['Positive', 'Positive Increase', 'Hospitalized', 'Hospitalized Increase', 'Death', 'Death Increase'],\r\n            type: \"scroll\",\r\n            padding: [30, 0]\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: historyDate\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, '100%']\r\n        },\r\n        dataZoom: [{\r\n            type: 'inside',\r\n            start: 50,\r\n            end: 100\r\n        }, {\r\n            start: 0,\r\n            end: 10\r\n        }],\r\n        series: [\r\n            {\r\n                name: 'Positive',\r\n                type: 'line',\r\n                data: positive\r\n            },\r\n            {\r\n                name: 'Positive Increase',\r\n                type: 'line',\r\n                data: positiveIncrease\r\n            },\r\n            {\r\n                name: 'Hospitalized',\r\n                type: 'line',\r\n                data: hospitalized\r\n            },\r\n            {\r\n                name: 'Hospitalized Increase',\r\n                type: 'line',\r\n                data: hospitalizedIncrease\r\n            },\r\n            {\r\n                name: 'Death',\r\n                type: 'line',\r\n                data: death\r\n            },\r\n            {\r\n                name: 'Death Increase',\r\n                type: 'line',\r\n                data: deathIncrease\r\n            }\r\n        ]\r\n    };\r\n    var myChart;\r\n    function showChart(){\r\n        myChart = echarts.init(lineChart.current);\r\n        myChart.showLoading();\r\n        if (!loading){\r\n            myChart.hideLoading();\r\n            myChart.setOption(option);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(getUSHistory()).then(res=>{\r\n            setHistoryDate(res.map(item=>item.date));\r\n            setPositive(res.map(item=>item.positive));\r\n            setPositiveIncrease(res.map(item=>item.positiveIncrease));\r\n            setHospitalized(res.map(item=>item.hospitalized));\r\n            setHospitalizedIncrease(res.map(item=>item.hospitalizedIncrease));\r\n            setDeath(res.map(item=>item.death));\r\n            setDeathIncrease(res.map(item=>item.deathIncrease));\r\n            showChart();\r\n        });\r\n    }, []);\r\n    useEffect(()=>{\r\n        setLoading(false);\r\n        showChart();\r\n    }, [mapType!==\"\"]);\r\n    return (\r\n        <div\r\n            className={className}\r\n            ref={lineChart}\r\n            onDoubleClick={()=>{\r\n                setLoading(false);\r\n                showChart();\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default USChart;","C:\\Users\\yzy97\\Documents\\intern\\student work\\covid-19tracking\\covid-19tracking\\src\\components\\chart\\stateChart.js",["97","98"],"import { useEffect, useRef , useState} from \"react\";\r\nimport \"../../css/chart.css\";\r\nimport getStateHistory from \"../../store/action/getStateHistory\";\r\nimport usStatesReverse from \"./usStatesReverse.json\";\r\n\r\nfunction StateChart(props){\r\n    let {dispatch, oneState, echarts, className} = props;\r\n    const [historyDate, setHistoryDate] = useState([]);\r\n    const [positive, setPositive] = useState([]);\r\n    const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n    const [hospitalized, setHospitalized] = useState([]);\r\n    const [hospitalizedIncrease, setHospitalizedIncrease] = useState([]);\r\n    const [death, setDeath] = useState([]);\r\n    const [deathIncrease, setDeathIncrease] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    var lineChart = useRef(null);\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            position: function (pt) {\r\n                return [pt[0], '10%'];\r\n            }\r\n        },\r\n        title: {\r\n            left: 'center',\r\n            top: '0%',\r\n            text: 'COVID-19 ' + oneState + ' historic values',\r\n        },\r\n        legend:{\r\n            data: ['Positive', 'Positive Increase', 'Hospitalized', 'Hospitalized Increase', 'Death', 'Death Increase'],\r\n            type: \"scroll\",\r\n            padding: [30, 0]\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: historyDate\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, '100%']\r\n        },\r\n        dataZoom: [{\r\n            type: 'inside',\r\n            start: 50,\r\n            end: 100\r\n        }, {\r\n            start: 0,\r\n            end: 10\r\n        }],\r\n        series: [\r\n            {\r\n                name: 'Positive',\r\n                type: 'line',\r\n                data: positive\r\n            },\r\n            {\r\n                name: 'Positive Increase',\r\n                type: 'line',\r\n                data: positiveIncrease\r\n            },\r\n            {\r\n                name: 'Hospitalized',\r\n                type: 'line',\r\n                data: hospitalized\r\n            },\r\n            {\r\n                name: 'Hospitalized Increase',\r\n                type: 'line',\r\n                data: hospitalizedIncrease\r\n            },\r\n            {\r\n                name: 'Death',\r\n                type: 'line',\r\n                data: death\r\n            },\r\n            {\r\n                name: 'Death Increase',\r\n                type: 'line',\r\n                data: deathIncrease\r\n            }\r\n        ]\r\n    };\r\n    var myChart;\r\n    function showChart(option){\r\n        myChart = echarts.init(lineChart.current);\r\n        myChart.showLoading();\r\n        if (!loading){\r\n            myChart.hideLoading();\r\n            myChart.setOption(option);\r\n        }\r\n    }\r\n    function changeOption(option, date, pos, posI, hos, hosI, dea, deaI){\r\n        option.xAxis.data = date;\r\n        option.series[0].data = pos;\r\n        option.series[1].data = posI;\r\n        option.series[2].data = hos;\r\n        option.series[3].data = hosI;\r\n        option.series[4].data = dea;\r\n        option.series[5].data = deaI;\r\n        return option;\r\n    }\r\n    useEffect(()=>{\r\n        showChart(option);\r\n    }, []);\r\n    useEffect(()=>{\r\n        setLoading(false);\r\n        console.log(oneState);\r\n        if(oneState!==\"\"){\r\n            dispatch(getStateHistory(usStatesReverse[oneState])).then(res=>{\r\n                let [date, pos, posI, hos, hosI, dea, deaI] = [\r\n                    res.map(item=>item.date),\r\n                    res.map(item=>item.positive),\r\n                    res.map(item=>item.positiveIncrease),\r\n                    res.map(item=>item.hospitalized),\r\n                    res.map(item=>item.hospitalizedIncrease),\r\n                    res.map(item=>item.death),\r\n                    res.map(item=>item.deathIncrease)\r\n                ];\r\n                setHistoryDate(date);\r\n                setPositive(pos);\r\n                setPositiveIncrease(posI);\r\n                setHospitalized(hos);\r\n                setHospitalizedIncrease(hosI);\r\n                setDeath(dea);\r\n                setDeathIncrease(deaI);\r\n                option = changeOption(option, date, pos, posI, hos, hosI, dea, deaI);\r\n                showChart(option);\r\n            });\r\n        }\r\n    }, [oneState])\r\n    return (\r\n        <div\r\n            className={className}\r\n            ref={lineChart}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StateChart;",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":32,"column":8,"nodeType":"105","endLine":32,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":39,"column":21,"nodeType":"109","messageId":"110","endLine":39,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":88,"column":20,"nodeType":"109","messageId":"113","endLine":88,"endColumn":21},{"ruleId":"103","severity":1,"message":"114","line":188,"column":6,"nodeType":"105","endLine":188,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":203,"column":23,"nodeType":"118","messageId":"119","endLine":203,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":208,"column":23,"nodeType":"118","messageId":"119","endLine":208,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":213,"column":23,"nodeType":"118","messageId":"119","endLine":213,"endColumn":25},{"ruleId":"103","severity":1,"message":"120","line":226,"column":6,"nodeType":"105","endLine":226,"endColumn":15,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":1,"nodeType":"124","endLine":6,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":2,"column":5,"nodeType":"127","messageId":"128","endLine":24,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":2,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":6},{"ruleId":"99","replacedBy":"129"},{"ruleId":"101","replacedBy":"130"},{"ruleId":"103","severity":1,"message":"131","line":103,"column":8,"nodeType":"105","endLine":103,"endColumn":10,"suggestions":"132"},{"ruleId":"103","severity":1,"message":"133","line":107,"column":8,"nodeType":"105","endLine":107,"endColumn":22,"suggestions":"134"},{"ruleId":"103","severity":1,"message":"135","line":107,"column":9,"nodeType":"109","endLine":107,"endColumn":21},{"ruleId":"103","severity":1,"message":"136","line":105,"column":8,"nodeType":"105","endLine":105,"endColumn":10,"suggestions":"137"},{"ruleId":"103","severity":1,"message":"138","line":127,"column":26,"nodeType":"139","endLine":127,"endColumn":85},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'dispatch' and 'showMap'. Either include them or remove the dependency array.",["143"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'changeValue' and 'showMap'. Either include them or remove the dependency array.",["144"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["140"],["141"],"React Hook useEffect has missing dependencies: 'dispatch' and 'showChart'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'showChart'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has missing dependencies: 'option' and 'showChart'. Either include them or remove the dependency array.",["147"],"Assignments to the 'option' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [dispatch, showMap]",{"range":"162","text":"163"},"Update the dependencies array to be: [changeValue, mapType, showMap]",{"range":"164","text":"165"},"Update the dependencies array to be: [dispatch, showChart]",{"range":"166","text":"167"},"Update the dependencies array to be: [showChart]",{"range":"168","text":"169"},"Update the dependencies array to be: [option, showChart]",{"range":"170","text":"171"},[929,931],"[dispatch]",[6143,6145],"[dispatch, showMap]",[7135,7144],"[changeValue, mapType, showMap]",[3311,3313],"[dispatch, showChart]",[3395,3409],"[showChart]",[3268,3270],"[option, showChart]"]